--Table for Book
create TABLE book(
    ID                  NUMBER GENERATED BY DEFAULT AS IDENTITY ,
    author_id           NUMBER,
    publisher_id        NUMBER,
    NAME                VARCHAR2(100),
    IMAGE               varchar2(1000) default 'https://st2.depositphotos.com/5703046/12114/i/950/depositphotos_121142344-stock-photo-white-book-on-white-background.jpg',
    ISBN                VARCHAR2(100),
    PAGE                NUMBER,
    EDITION             VARCHAR2(100),
    publishing_year     NUMBER,
    Price               NUMBER,
    Stock               NUMBER,
    Language            VARCHAR2(20),
    GENRE               VARCHAR2(512),
    SUMMARY             VARCHAR2(3000),
    STAR                NUMBER default 0,
    REVIEW_COUNT        NUMBER default 0,
    CONSTRAINT book_pk PRIMARY KEY (ID),
    CONSTRAINT book_author_fk FOREIGN KEY(author_id) REFERENCES author(ID),
    CONSTRAINT book_publisher_fk FOREIGN KEY(publisher_id) REFERENCES publisher(ID)
);

ALTER TABLE BOOK 
 ADD DISCOUNT NUMBER;

--Table for Author
create TABLE author (
    ID          NUMBER GENERATED BY DEFAULT AS IDENTITY ,
    Name        VARCHAR2(100),
    password    VARCHAR2(1024),
    IMAGE       varchar2(1000) default 'https://www.123rf.com/photo_91832679_man-avatar-icon-flat-illustration-of-man-avatar-vector-icon-isolated-on-white-background.html',
    DESCRIPTION VARCHAR2(3000),
    CONSTRAINT author_pk primary key (ID)
);

--Table for Publisher
create TABLE publisher(
    ID              NUMBER GENERATED BY DEFAULT AS IDENTITY ,
    name            VARCHAR2(100) NOT NULL,
    founding_date   DATE,
    DESCRIPTION    VARCHAR2(3000),
    IMAGE           VARCHAR2(1000) default 'https://ds.rokomari.store/rokomari110/company/publisher.png',
    CONSTRAINT publisher_pk PRIMARY KEY(ID)
);

--Table for User
create TABLE app_user (
    ID          NUMBER GENERATED BY DEFAULT AS IDENTITY ,
    Name        VARCHAR2(100) NOT NULL ,
    EMAIL       varchar2(100) not null,
    password    VARCHAR2(1024) NOT NULL ,
    address     VARCHAR2(1000),
    PHONE       varchar2(20),
    DOB         varchar2(20),
    IMAGE       VARCHAR2(1000) default '/images/no-profile-picture.jpg',
    CONSTRAINT user_pk primary key (ID)
);

--Changed user table
alter table APP_USER
	add cart_id NUMBER
	add constraint APP_USER_CART_ID_FK foreign key(cart_id) references CART;


--Table for Voucher
create TABLE voucher (
    ID          NUMBER GENERATED BY DEFAULT AS IDENTITY ,
    name        VARCHAR2(100) NOT NULL ,
    discount    NUMBER NOT NULL,
    validity    DATE,
    CAP         NUMBER default 250,
    CONSTRAINT voucher_pk PRIMARY KEY(ID)
);



--Table for Cart
create TABLE cart (
    ID         NUMBER GENERATED ALWAYS AS IDENTITY,
    user_id     NUMBER,
    created_at  DATE DEFAULT SYSDATE,
    CONSTRAINT cart_pk PRIMARY KEY(ID),
    CONSTRAINT cart_user_fk FOREIGN KEY(user_id) REFERENCES app_user(ID)
);

--Table for picked book
create TABLE picked(
    ID         NUMBER GENERATED BY DEFAULT AS IDENTITY ,
    cart_id    NUMBER,
    book_id    NUMBER,
    created_at DATE DEFAULT SYSDATE,
    AMOUNT     NUMBER default 1,
    CONSTRAINT picked_pk PRIMARY KEY (ID),
    CONSTRAINT picked_cart_fk FOREIGN KEY (cart_id) REFERENCES cart(ID),
    CONSTRAINT picked_book_fk FOREIGN KEY (book_id) REFERENCES book (ID),
);


--Table for ordered book
create TABLE book_order (
    ID              NUMBER GENERATED BY DEFAULT AS IDENTITY,
    cart_id         NUMBER,
    voucher_id      NUMBER,
    NAME            VARCHAR2(100) not null,
	phone1          VARCHAR2(20) not null,
	phone2          VARCHAR2(20),
	address         VARCHAR2(1000),
	-- pick            NUMBER default 1 not null,
    total_price     NUMBER,
    total_item      NUMBER,
    state           VARCHAR2(50),
    payment_method  VARCHAR2(50),
    created_at      DATE DEFAULT SYSDATE,
    CONSTRAINT order_pk PRIMARY KEY(ID),
    CONSTRAINT order_cart_fk FOREIGN KEY(cart_id) REFERENCES cart(ID),
    CONSTRAINT order_voucher_fk FOREIGN KEY(voucher_id) REFERENCES voucher(ID)
);




--Table for Review
create TABLE rates(
    ID          NUMBER GENERATED BY DEFAULT AS IDENTITY ,
    user_id     NUMBER,
    book_id     NUMBER,
    stars       NUMBER,
    REVIEW      VARCHAR2(1000),
    created_at  DATE DEFAULT SYSDATE,
    CONSTRAINT rates_pk PRIMARY KEY(ID),
    CONSTRAINT rates_user_fk FOREIGN KEY(user_id) REFERENCES app_user(ID),
    CONSTRAINT rates_book_fk FOREIGN KEY(book_id) REFERENCES book(ID)
);


--Table for Wish List
create TABLE WISH_LIST(
	user_id INTEGER NOT NULL,
	book_id INTEGER NOT NULL,
	CONSTRAINT WISH_LIST_PK PRIMARY KEY(user_id,book_id),
	CONSTRAINT WISH_LIST_USER_FK FOREIGN KEY(user_id) REFERENCES APP_USER(ID) ,
	CONSTRAINT WISH_LIST_BOOK_FK FOREIGN KEY(book_id) REFERENCES BOOK(ID)
);


--TABLE FOR FOLLOW AUTHOR
CREATE TABLE FOLLOW_AUTHOR (
    user_id INTEGER NOT NULL,
    author_id INTEGER NOT NULL,
    follow_date DATE NOT NULL,
    CONSTRAINT PK_FOLLOW_AUTHOR PRIMARY KEY(user_id, author_id),
    CONSTRAINT FK_FOLLOW_AUTHOR_USER FOREIGN KEY(user_id) REFERENCES APP_USER(ID),
    CONSTRAINT FK_FOLLOW_AUTHOR_AUTHOR FOREIGN KEY(author_id) REFERENCES AUTHOR(ID)
);

CREATE TABLE FOLLOW_PUBLISHER (

    user_id INTEGER NOT NULL,
    publisher_id INTEGER NOT NULL,
    follow_date DATE NOT NULL,
    CONSTRAINT PK_FOLLOW_PUBLISHER PRIMARY KEY(user_id, publisher_id),
    CONSTRAINT FK_FOLLOW_PUBLISHER_USER FOREIGN KEY(user_id) REFERENCES APP_USER(ID),
    CONSTRAINT FK_FOLLOW_PUBLISHER_PUBLISHER FOREIGN KEY(publisher_id) REFERENCES PUBLISHER(ID)

);

CREATE TABLE procedure_function_log (
    log_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    pl_name VARCHAR2(1000),
    type_name VARCHAR2(1000),
    user_id NUMBER,
    call_timestamp TIMESTAMP,
    parameters VARCHAR2(4000)
);




ALTER TABLE AUTHOR 
ADD FOLLOWERS NUMBER DEFAULT 0;

ALTER TABLE PUBLISHER 
ADD FOLLOWERS NUMBER DEFAULT 0;

-- CHANGED TABLED 
ALTER TABLE APP_USER
DROP COLUMN CART_ID;


ALTER TABLE BOOK_ORDER
DROP COLUMN CART_ID;


ALTER TABLE PICKED
DROP COLUMN CART_ID;


DROP TABLE CART;


create TABLE cart (
    ID         NUMBER GENERATED ALWAYS AS IDENTITY,
    user_id     NUMBER,
    created_at  DATE DEFAULT SYSDATE,
    CONSTRAINT cart_pk PRIMARY KEY(ID),
    CONSTRAINT cart_user_fk FOREIGN KEY(user_id) REFERENCES app_user(ID)
);


ALTER TABLE APP_USER
ADD cart_id NUMBER;

ALTER TABLE APP_USER
ADD CONSTRAINT app_user_cart_fk FOREIGN KEY (cart_id) REFERENCES cart (ID);


ALTER TABLE book_order
ADD cart_id NUMBER;

ALTER TABLE book_order
ADD CONSTRAINT book_order_cart_fk FOREIGN KEY (cart_id) REFERENCES cart (ID);


ALTER TABLE picked
ADD cart_id NUMBER;

ALTER TABLE picked
ADD CONSTRAINT picked_cart_fk FOREIGN KEY (cart_id) REFERENCES cart (ID);


ALTER TABLE BOOK_ORDER 
    DROP COLUMN NAME

ALTER TABLE BOOK_ORDER 
    ADD book_id NUMBER

ALTER TABLE BOOK 
    ADD DISCOUNT NUMBER;

